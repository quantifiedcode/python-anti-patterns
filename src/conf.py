# -*- coding: utf-8 -*-
#
# Python Code Patterns documentation build configuration file, created by
# sphinx-quickstart on Fri Jul 25 15:49:10 2014.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os

sys.path.append(os.path.abspath("_themes"))

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = []

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix of source filenames.
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = u'Python Anti-Patterns'
copyright = u'2014-2015, QuantifiedCode'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '1.0'
# The full version, including alpha/beta/rc tags.
#release = '0.1'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme_path = ['_themes']
html_theme = 'quantifiedcode'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = 'PythonAntiPatternsDoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# Set font package
# linux libertine needs this package installs on the machine
# https://www.ctan.org/tex-archive/fonts/libertine/?lang=de
# but should also be in the full installation of tex-live
"fontpkg" : """
% pretty font
\\usepackage{palatino}
""",

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
"preamble": """
% remove empty page between chapters (maybe unneccesary)
\\renewcommand{\\cleardoublepage}{\\clearpage}

% disable numbering for chapters
\\renewcommand\\thechapter{}
\\renewcommand\\thesection{\\arabic{section}}

% format chapter headline style and indentation
\\titleformat{\\chapter}[hang]{\\normalfont\\LARGE\\bfseries}{}{0pt}{}
% remove new page before chapter
\\titleclass{\\chapter}{straight}

% set chapter spacing
\\titlespacing*{\\chapter}{0pt}{15pt}{5pt}

% new page before every section
\\newcommand{\\sectionbreak}{\\clearpage}

% set correct header and footers
\\makeatletter
\\fancypagestyle{normal}{
  \\fancyhf{}
  \\fancyfoot[LE,RO]{{\\py@HeaderFamily\\thepage}}
  \\fancyfoot[LO]{{\\py@HeaderFamily\\nouppercase{\\rightmark}}}
  \\fancyfoot[RE]{{\\py@HeaderFamily\\nouppercase{\\rightmark}}}
  \\fancyhead[LE,RO]{{\\py@HeaderFamily \\@title}}
  \\renewcommand{\\headrulewidth}{0.4pt}
  \\renewcommand{\\footrulewidth}{0.4pt}
}
\\makeatother

% make shading of code blocks work and remove border
\\definecolor{VerbatimColor}{rgb}{0.95,0.95,0.95}
\\definecolor{VerbatimBorderColor}{rgb}{0.95,0.95,0.95}

% set table of content depth
\\setcounter{tocdepth}{2}


% add line break after paragraph
\\makeatletter
\\renewcommand\\paragraph{%
  \\@startsection{paragraph}{4}{0mm}%
    {-\\baselineskip}%
    {.5\\baselineskip}%
    {\\normalfont\\normalsize\\bfseries}}
\\makeatother

% add linebreak after subparagraph (this is stupid. the structure should be
% changed for the latex output but that doesnt work as expected)
\\makeatletter
\\renewcommand\\subparagraph{%
  \\@startsection{paragraph}{4}{0mm}%
    {-\\baselineskip}%
    {.3\\baselineskip}%
    {\\normalfont\\normalsize\\bfseries}}
\\makeatother

% make sure to copy the logo into the latex built directory in the Makefile.
% Otherwise it wont be found.
\\newcommand*{\\plogo}{\\includegraphics[width=.04\\textwidth]{./logo_qc.png}}
""",

# remove "release" subtitle from title page
"releasename": "",

# define some pretty title page
"maketitle" : """
\\makeatletter
  \\begingroup % Create the command for including the title page in the document
  \\hbox{ % Horizontal box
  \\hspace*{0.2\\textwidth} % Whitespace to the left of the title page
  \\rule{1pt}{\\textheight} % Vertical line
  \\hspace*{0.05\\textwidth} % Whitespace between the vertical line and title page text
  \\parbox[b]{0.75\\textwidth}{ % Paragraph box which restricts text to less than the width of the page
  
  {\\noindent\\Huge\\bfseries Python Anti-Patterns}\\\\[4\\baselineskip] % Title
  {\\large \\textbf{\\textsl{The Little Book of Python Anti-Patterns and Worst Practice}}}\\\\[2\\baselineskip] % Tagline or further description
  
  \\vspace{0.5\\textheight} % Whitespace between the title block and the publisher
  {\\noindent \\plogo \\ \\ \\Large\\bfseries{QuantifiedCode}}\\\\[\\baselineskip] % Publisher and logo
  }}
  \\endgroup
\\makeatother
"""

}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  ('index', 'The-Little-Book-of-Python-Anti-Patterns-1.0.tex', u'Python Anti-Patterns',
   u'Quantified Code', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = "snake_warning.png"
# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
latex_show_urls = "no"

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    ('index', 'pythoncodepatterns', u'Python Anti-Patterns',
     [u'Andreas Dewes'], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False

# -- Options for epub output ---------------------------------------

# can be "inline" (default), "footnote" or "no"
epub_show_urls = "no"

# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  ('index', 'PythonAntiPatterns', u'Python Anti-Patterns',
   u'Andreas Dewes', 'PythonAntiPatterns', 'A collection of Python anti-patterns.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False

from docutils.nodes import raw as raw_node
def role_github_badge(name, rawtext, text, lineno, inliner,
            options={}, content=[]):
    print(rawtext,text,options)
    html = """
     <a class="github_ribbon" href="https://github.com/%s"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://github-camo.global.ssl.fastly.net/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png"></a>
     """ % text
    return [raw_node(text = html,format = 'html')],[]

from docutils.nodes import raw as raw_node
def role_font_awesome(name, rawtext, text, lineno, inliner,
            options={}, content=[]):
    print(rawtext,text,options)
    html = "<i class=\"fa fa-%s\"></i>" % text
    return [raw_node(text = html,format = 'html')],[]

def setup(app):
    app.add_role("github_badge",role_github_badge)
    app.add_role("fa",role_font_awesome)
